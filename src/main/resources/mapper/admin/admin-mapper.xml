<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<select id="totalCountOfMembers" resultType="_int">
		select count(*) from tb_member
	</select>
  <select id="selectAllMembers" resultType="Member">
  	select
  		*
  	from
  		tb_member
  </select>
  
  <select id="selectOneMember" resultType="MemberWithGroup">
	select
	    m.*,
	    (select group_name from tb_group tb where m.group_no = tb.group_no) "GROUP_NAME",
		(select renamed_filename from attachment a where a.attach_no = m.attach_no) "renamed_FileName"	    
	from
	    (select
	        m.*,
	        group_no
	    from 
	        tb_member m 
	        left join applocation_group ag on m.id = ag.member_id
	    where 
        group_accept='Y' or group_accept is null) m	
    where
	    id=#{id}
  </select>
  
  <!-- 블랙리스트 등록 및 해제 -->
   <update id="updateBlack">
  	update
  		tb_member
  	<set>
  		<if test="enabled == 'true'">enabled =0</if>
  		<if test="enabled == 'false'">enabled =1</if>
  	</set>
  	where
  		id = #{id}
  </update>
  
  <!-- 회원 목록 내에서 회원 검색 -->
  <select id="searchMembers" resultType="Member">
  	select
  		*
  	from
  		tb_member
  	<where>
		<if test="searchType == 'id' and searchKeyword != ''">
			and id like '%'||#{searchKeyword}||'%'
		</if>
		<if test="searchType == 'memberName' and searchKeyword != ''">
			and member_name like '%'||#{searchKeyword}||'%'
		</if>
		<if test="searchType == 'nickname' and searchKeyword != ''">
			and nickname like '%'||#{searchKeyword}||'%'
		</if>		
		<if test="searchType == 'phone' and searchKeyword != ''">
			and phone like '%'||#{searchKeyword}||'%'
		</if>
		<if test="searchType == 'email' and searchKeyword != ''">
			and email like '%'||#{searchKeyword}||'%'
		</if>		
		<if test="searchGender != ''">
			and member_gender like #{searchGender}
		</if>
		<if test="searchJob != ''">
			and member_job like #{searchJob}
		</if>		
		<if test="searchRegDateStart != '' and searchRegDateEnd != ''">
			and member_enroll_date between #{searchRegDateStart} and #{searchRegDateEnd}
		</if>
		<if test="searchBirthdayStart != '' and searchBirthdayStart != ''">
			and birthday between #{searchBirthdayStart} and #{searchBirthdayEnd}
		</if>
		<if test="searchEnabled != ''">
			and enabled = ${searchEnabled}
		</if>		
	
  	</where>
  </select>
  
  <!-- 미승인 그룹리스트 조회 -->
  <select id="selectNotApprovedAGList" resultType="ApplocationGroup">
  	select 
  		* 
  	from 
  		applocation_group 
  	where 
  		role = 'G' and group_accept ='N'
  
  </select>
  
  <!-- 미승인 그룹(비동기용) -->
  <select id="selectOneNotApprovedGroup" resultType="NotApprovedGroup">
	select 
	    g.*,
	    ag.member_id "HOST_ID",
	    ag.role,
	    a.renamed_filename,
	    a.img_flag,
	    sc.category1_name
	from 
	    tb_group g left join applocation_group ag
	        on g.group_no = ag.group_no
	    left join attachment a
	        on g.group_no = a.group_no
	    left join studygroup_category1 sc
	        on g.category_no = sc.category1_no
	where
	    g.group_no = #{groupNo} and ag.role='G'
  </select>
  
    <!-- 그룹 승인하기 -->
   <update id="updateGroupApprove">
  	update
  		applocation_group
  	<set>
  		group_accept='Y'
  	</set>
  	where
  		group_no = #{groupNo}
  </update>
  
  <!-- 카카오 이미지 불러오는 용 -->
  <select id="selectKakaoImage" resultType="attachment">
  	select
  		*
  	from
  		attachment
  	where
		member_id = #{id}
  </select>
  
  <!-- 한 주간 가입자수 -->
  <select id="thisWeekEnrollMember" resultType="SevenDaysData">
	SELECT
	    (SELECT 
	        COUNT(*)
	    FROM 
	        tb_member
	    WHERE 
	        TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate)-6, 'yyyymmdd')) AS "today_6"
	        
	    ,(SELECT COUNT(*)
	    FROM tb_member
	    WHERE TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate)-5, 'yyyymmdd')) AS "today_5"
	    ,(SELECT COUNT(*)
	    FROM tb_member
	    WHERE TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate)-4, 'yyyymmdd')) AS "today_4"
	    ,(SELECT COUNT(*)
	    FROM tb_member
	    WHERE TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate )-3, 'yyyymmdd')) AS "today_3"
	    ,(SELECT COUNT(*)
	    FROM tb_member
	    WHERE TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate )-2, 'yyyymmdd')) AS "today_2"
	    ,(SELECT COUNT(*)
	    FROM tb_member
	    WHERE TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate )-1, 'yyyymmdd')) AS "today_1"
	    ,(SELECT COUNT(*)
	    FROM tb_member
	    WHERE TO_CHAR(member_enroll_date, 'yyyymmdd') = TO_CHAR(TRUNC(sysdate), 'yyyymmdd')) AS "today"
	FROM 
		DUAL
  </select>
  
  <!-- Admin main페이지, 문의사항 list  -->
  <select id="adminMainQuestionList" resultType="Question">
	select
	    que_no,
	    member_id,
	    status,
	    que_title,
	    que_content,
	    reg_date,
	    que_category,
	    attach_no
	from
	    (select
	        q.*,
	        row_number() over (order by que_no desc) rnum
	    from
	        Question q
	    where
	        status = 'N')
	where
	    rnum between 1 and 10
  </select>
  
  <!-- Admin main페이지, 그룹 list -->
  <select id="adminMainGroupList" resultType="group">
  	select
  	*
  	from(
  		select
	  		tg.*,
	  		row_number() over (order by group_no desc) rnum
	  	from
	  		tb_group tg)
	where
		rnum between 1 and 10
  	
  </select>
  
  <!-- Admin main페이지, 문의목록에 사용할 프로필 이미지 -->
  <select id="selectProfileImgList" resultType="Attachment">
	select
	    *
	from    
	    attachment
	where
	    img_flag = 'P'
  </select>
  
  <select id="searchQuestion" resultType="QuestionWithMemberNameAndNickName">
	select
		    q.*,
	        member_name,
	        nickname
	from 
	    question q left join tb_member tm
	    on q.member_id = tm.id
  <where>
	<if test="searchType == 'que_no' and searchKeyword != ''">
		que_no = ${searchKeyword}
  	</if>
	<if test="searchType == 'que_title' and searchKeyword != ''">	
		que_title like '%'||#{searchKeyword}||'%'
  	</if>
  	<if test="searchType == 'member_id' and searchKeyword != ''">
  		member_id like '%'||#{searchKeyword}||'%'
  	</if>
	<if test="searchType == 'memberName' and searchKeyword != ''">
		member_name like '%'||#{searchKeyword}||'%'
  	</if>  	
	<if test="searchType == 'nickname' and searchKeyword != ''">
		nickname = #{searchKeyword}
  	</if>
	<if test="searchRegDateStart != '' and searchRegDateEnd != '' ">
		and reg_date between #{searchRegDateStart} and #{searchRegDateEnd}
	</if>
	<if test="answerComplete != ''">
		and status = #{answerComplete}
	</if>
  </where>
   order by
   	1 desc
  </select>
  
  <select id="genderData" resultType="GenderData">
	select
	    (select count(*) from tb_member where member_gender = 'M') male,
	    (select count(*) from tb_member where member_gender = 'F') female
	from
	    dual
  </select>
  
  <select id="EnrollMemberByMonth" resultType="EnrollMemberByMonth">
	SELECT TO_CHAR(b.dt, 'YYYY-MM-DD') AS member_enroll_date
	     , NVL(SUM(a.cnt), 0) cnt
	FROM 
	        (           
	            SELECT 
	                 TO_CHAR(member_enroll_date, 'YYYY-MM-DD') AS member_enroll_date
	                , COUNT(*) cnt
	            FROM 
	                tb_member
	            GROUP BY 
	                member_enroll_date
	        ) a
	      , ( 
	        SELECT 
	            TO_DATE(#{firstDate}, 'YYYY-MM-DD') + (LEVEL-1) AS DT 
	        FROM 
	            DUAL 
	        CONNECT BY LEVEL <![CDATA[ < ]]>= (TO_DATE(#{lastDate}, 'YYYY-MM-DD') - TO_DATE(#{firstDate}, 'YYYY-MM-DD')) + 1
	        ) b
	WHERE 
	    b.dt = a.member_enroll_date(+)
	GROUP BY 
	    b.dt
	ORDER BY 
	    b.dt   
  </select>
	<select id="selectAllBoardTotalCount" resultType="_int">
		select 
			count(*) 
		from 
			post
	</select>
	
	<select id="selectAllBoardList" resultType="BoardData">
		select
		    p.post_no,
		    p.member_id,
		    p.post_title,
		    p.post_reg_date,
		    m.nickname,
		    b.group_no,
		    b.board_type,
		    b.board_name,
		    c.board_type_name,
		    g.group_name
		from
		    post p left join tb_member m on p.member_id = m.id
		              left join board b on p.board_no = b.board_no
		              left join board_boardtype c on b.board_type = c.board_type
		              left join tb_group g on b.group_no = g.group_no
		order by p.post_reg_date desc
	</select>
	<select id="selectAllBoardTypeList" resultType="BoardType">
		select * from board_boardtype
	</select>
	<select id="selectSearchBoardTotalCount" resultType="_int">
		select
		    COUNT(*)
		from
		    post p left join tb_member m on p.member_id = m.id
		              left join board b on p.board_no = b.board_no
		              left join board_boardtype c on b.board_type = c.board_type
		              left join tb_group g on b.group_no = g.group_no
		<where>
			<if test="groupNo != 'All'">
				b.group_no = #{groupNo}
		  	</if>
			<if test="boardType != 'All'">
				and b.board_type = #{boardType}
		  	</if>
		  	<if test="searchType == 'ById'">
		  		and p.member_id like '%'||#{searchKeyword}||'%'
		  	</if>
			<if test="searchType == 'ByTitle'">
				and p.post_title like '%'||#{searchKeyword}||'%'
		  	</if>
		</where>
		order by
			p.post_reg_date desc
	</select>
	<select id="selectSearchBoardList" resultType="BoardData">
		select
		    p.post_no,
		    p.member_id,
		    p.post_title,
		    p.post_reg_date,
		    m.nickname,
		    b.group_no,
		    b.board_type,
		    b.board_name,
		    c.board_type_name,
		    g.group_name
		from
		    post p left join tb_member m on p.member_id = m.id
		              left join board b on p.board_no = b.board_no
		              left join board_boardtype c on b.board_type = c.board_type
		              left join tb_group g on b.group_no = g.group_no
		<where>
			<if test="groupNo != 'All'">
				b.group_no = #{groupNo}
		  	</if>
			<if test="boardType != 'All'">
				and b.board_type = #{boardType}
		  	</if>
		  	<if test="searchType == 'ById'">
		  		and p.member_id like '%'||#{searchKeyword}||'%'
		  	</if>
			<if test="searchType == 'ByTitle'">
				and p.post_title like '%'||#{searchKeyword}||'%'
		  	</if>
		</where>
		order by
			p.post_reg_date desc
	</select>
	<insert id="insertAuthoritiesValueForGroupMaster">
		insert into authorities values(#{memberId}, #{authority})
	</insert>
	
	<!-- 모임 통계 페이지 -->
	
	<select id="totalCountOfGroup" resultType="Count">
		select count(*) count from tb_group
	</select>
	
	<select id="countOfPremiumGroup" resultType="Count">
		select count(*) count from tb_group where group_charge = 'P'
	</select>
	
	<select id="countOfPost" resultType="Count">
		select count(*) count from post 
	</select>
	
	<select id="countOfNewGroupInThisMonth" resultType="Count">
		select count(*) count from tb_group where group_enroll_date between TRUNC(sysdate,'MM') AND (LAST_DAY(SYSDATE))
	</select>
	
	<select id="countOfnewPostInThisWeekList" resultType="ColumnAndCount">
		select
		    group_name "column",
		    count
		from(
		    select
		        a.*,rownum
		    from
		        (
		        select 
		            distinct b1.group_no,
		            group_name,
		            (select count(*) from post p left join board b on p.board_no = b.board_no where post_reg_date between (sysdate-1) and sysdate and group_no = b1.group_no) count
		        from 
		            post p 
		                left join board b1 on p.board_no = b1.board_no
		                left join tb_group tg on b1.group_no = tg.group_no
		        where 
		            post_reg_date between (sysdate-6) and sysdate
		        order by
		            count desc
		        ) a
		    where 
		        rownum between 1 and 5
		    )		
	</select>
	
	<select id="countOfGroupLikeList" resultType="ColumnAndCount">
		select
		    group_name "column", group_like_count "count"
		from
		    (
		    select
		        a.*, rownum
		    from
		        (select * from tb_group tg order by group_like_count desc, group_no desc) a
		    where
		        rownum between 1 and 5
		    )	
	</select>
	
	<!-- 모임 관리 페이지 비동기로 클릭한 정보 가져오기 -->
	<select id="totalCountOfPost" resultType = "ColumnAndCount">
		select
		group_name "column",
		count
		from
		    (
		    select
		    tg1.group_name,
		    a.COUNT,
		    rownum
		    from(
		        select  
		            b.group_no,
		            count(*) "COUNT"
		        from post p 
		            left join board b on p.board_no = b.board_no
		            left join tb_group tg on tg.group_no = b.group_no
		        group by
		            b.group_no
		        order by
		            COUNT desc, b.group_no desc
		        ) a 
		    left join tb_group tg1 on a.group_no = tg1.group_no
		    )
		where
		    rownum between 1 and 5		
	</select>
	
	<!-- 모임 목록 페이지 -->
	<select id="allGroupList" resultType="Group">
		select 
		    distinct tg.group_no, category_no, group_name, GROUP_ENROLL_DATE, group_charge, group_close, group_pool, group_private, group_like_count, group_location 
		from 
		    tb_group tg left join applocation_group ag on tg.group_no = ag.group_no where group_accept='Y'
		order by
		    group_no desc
	</select>	
	
	<select id="allGroupCount" resultType="_int">
		select
		    count(*)
		from(
				select 
					distinct tg.group_no
				from 
				    tb_group tg left join applocation_group ag on tg.group_no = ag.group_no where group_accept='Y'
				order by
				    tg.group_no desc	
)
	
	</select>
</mapper>