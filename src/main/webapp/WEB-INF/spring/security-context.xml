<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- #8.1 암호화처리 bean등록 -->
 	<beans:bean 
		id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		
	<beans:bean id="httpFirewall"
      class="org.springframework.security.web.firewall.StrictHttpFirewall"
      p:allowSemicolon="true"
      p:allowUrlEncodedSlash="true"/>

	<http-firewall ref="httpFirewall"/>
		
	
	<!-- <beans:bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
	<beans:constructor-arg>
		<beans:list>
		<filter-chain pattern="/restful/**" filters="
			securityContextPersistenceFilterWithASCFalse,
			basicAuthenticationFilter,
			exceptionTranslationFilter,
			filterSecurityInterceptor" />
		<filter-chain pattern="//**" filters="
			securityContextPersistenceFilterWithASCTrue,
			formLoginFilter,
			exceptionTranslationFilter,
			filterSecurityInterceptor" />
		</beans:list>
	</beans:constructor-arg>
	</beans:bean> -->		
 	
	
	
	
	
	
	<!-- #8.3 인증/권한 검사 설정 -->
	<!-- security에 의한 인증/권한 검사에서 제외 -->
	<http security="none" pattern="/resources/**" />
	
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/stomp/**" access="permitAll"/>
		<intercept-url pattern="/gw/chat/chatRoom/stomp/**" access="permitAll"/>
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/main/qaDetail.do" access="isAuthenticated()"/> 
		<intercept-url pattern="/group/groupLikeSearch.do" access="isAuthenticated()"/> 
		<intercept-url pattern="/main/**" access="permitAll"/>
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/member/memberLogin.do" access="permitAll"/>
		<intercept-url pattern="/member/memberLoginKakaoMoreInfo.do" access="permitAll"/>
		<intercept-url pattern="/member/memberAPImoreInfoEnroll.do" access="permitAll"/>
		<intercept-url pattern="/member/memberAPIEnroll.do" access="permitAll"/>
		<intercept-url pattern="/member/checkIdDuplicate1.do" access="permitAll"/>

		<intercept-url pattern="/member/memberEnroll.do" access="permitAll"/>
		<intercept-url pattern="/group/**" access="permitAll"/>
		

		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/**" access="isAuthenticated()"/> 
		
		<!-- 커스텀로그인 설정 -->
		<!-- login-page : 커스텀 로그인폼페이지. 핸들러작성 필요 -->
		<!-- login-processing-url : security가 인증을 처리할 주소. loginForm이 제출(POST)될 주소. 핸들러 작성 불필요 -->
		 <form-login 
			login-page="/member/memberLogin.do"
			login-processing-url="/member/memberLogin.do"
			username-parameter="id"
			password-parameter="password"
			/>
			
		<!-- logout-url : 핸들러 작성불필요 -->
		<!-- logout-success-url : 로그아웃이후 리다이렉트 url (기본값: /login?logout) -->
		<logout 
			logout-url="/member/memberLogout.do"
			logout-success-url="/"/>
		<access-denied-handler error-page="/error/accessDenied.do"/>
		
		<!-- csrf공격대비 기능 -->
		<!-- 
			Cross-site Request Forgery 
			특정권한이 있는 사용자로 하여금 해커가 유도한 행동을 함으로써 보안을 취약하게하거나, 개인정보를 탈취하는 기법 
		-->

		<csrf disabled="false"/>
		
		<!-- 
			remember-me
			- token-validity-seconds : 초단위 토큰유효시간을 설정 60 * 60 * 24 * 14 
		-->
		<remember-me 
			data-source-ref="dataSource"
			token-validity-seconds="1209600"/>
	</http>
	
	<authentication-manager>
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<context:component-scan base-package="com.kh.security"/>
	
</beans:beans>
